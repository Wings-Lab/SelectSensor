true transmitter (15, 10)  0

[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]
[ 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 0.00391 ]

[0] MI = 0.933475830828
[1] MI = 2.18624837417
[2] MI = 2.25724863288
[3] MI = 1.86202001602
[4] MI = 2.21786881576
[5] MI = 4.5632411879
[6] MI = 1.47599325554
[7] MI = 5.29668076537
[8] MI = 3.20711968334
[9] MI = 1.91369817421
[10] MI = 1.73091860709
[11] MI = 1.34686581414
[12] MI = 4.45376055882
[13] MI = 3.09157931339
[14] MI = 5.18753444444
[15] MI = 3.02206605526
[16] MI = 0.680956854605
[17] MI = 2.1141110909
[18] MI = 1.94884557465
[19] MI = 1.31027133768
[20] MI = 2.82694072778
[21] MI = 2.93773494621
[22] MI = 3.53679347345
[23] MI = 4.85634898628
MI =  5.29668076537
[7] [ (14, 12) ]

[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00019 0.00595 0.00019 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.09866 0.13045 0.00033 0.13045 0.09866 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00019 0.13045 0.00000 0.00000 0.00000 0.13045 0.00019 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00595 0.00033 0.00000 0.00000 0.00000 0.00033 0.00595 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00019 0.13045 0.00000 0.00000 0.00000 0.13045 0.00019 ]

[0, 7] MI = 0.103333489222
[1, 7] MI = 1.56912819262
[2, 7] MI = 1.38567168116
[3, 7] MI = 0.188751051797
[4, 7] MI = 1.6924480406
[5, 7] MI = 2.70321255222
[6, 7] MI = 0.103445373362
[7, 8] MI = 1.11727971079
[7, 9] MI = 0.702027959491
[7, 10] MI = 0.110155565741
[7, 11] MI = 0.60125716028
[7, 12] MI = 1.69709577946
[7, 13] MI = 1.00868907395
[7, 14] MI = 2.7022359584
[7, 15] MI = 2.32288374295
[7, 16] MI = 0.110435680292
[7, 17] MI = 0.347655873643
[7, 18] MI = 0.317569583839
[7, 19] MI = 1.63865905317
[7, 20] MI = 1.70313010569
[7, 21] MI = 1.48164283662
[7, 22] MI = 2.69447190346
[7, 23] MI = 1.68503230123
MI =  2.70321255222
[5, 7] [ (12, 13) (14, 12) ]

[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 1.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]

[0, 5, 7] MI = 0.000106682405516
[1, 5, 7] MI = 0.000106682406642
[2, 5, 7] MI = 0.000106682406619
[3, 5, 7] MI = 0.00010668240539
[4, 5, 7] MI = 0.00010668240666
[5, 6, 7] MI = 0.000106682404398
[5, 7, 8] MI = 0.000106682404826
[5, 7, 9] MI = 0.000106682406461
[5, 7, 10] MI = 0.000106682324962
[5, 7, 11] MI = 0.000106682406585
[5, 7, 12] MI = 0.000106682406582
[5, 7, 13] MI = 0.000106682406662
[5, 7, 14] MI = 0.000106682406662
[5, 7, 15] MI = 0.00010668240666
[5, 7, 16] MI = 0.000106682320984
[5, 7, 17] MI = 0.00010668231657
[5, 7, 18] MI = 0.000106682337642
[5, 7, 19] MI = 0.000106682326399
[5, 7, 20] MI = 0.000106682406662
[5, 7, 21] MI = 0.000106682367715
[5, 7, 22] MI = 0.000106682388403
[5, 7, 23] MI = 0.00010668240659
MI =  0.000106682406662
[5, 7, 13] [ (12, 13) (14, 12) (6, 5) ]

[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]
[ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 1.00000 0.00000 0.00000 0.00000 0.00000 0.00000 ]

time: 5.3566718101501465
Wrote profile results to select_sensor.py.lprof
Timer unit: 1e-06 s

Total time: 5.35626 s
File: select_sensor.py
Function: select_online_greedy_2 at line 1428

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1428                                               @profile
  1429                                               def select_online_greedy_2(self, budget, true_index):
  1430                                                   '''The online greedy selection version 2. Homogeneous.
  1431                                                   Attributes:
  1432                                                       budget (int)
  1433                                                       true_index (int)
  1434                                                   '''
  1435         1          5.0      5.0      0.0          plot_data = []
  1436         1         24.0     24.0      0.0          random.seed(1)
  1437         1          8.0      8.0      0.0          np.random.seed(2)
  1438                                                   #rand = random.randint(0, self.grid_len*self.grid_len-1)
  1439         1          2.0      2.0      0.0          true_transmitter = self.transmitters[true_index]         # in online selection, there is one true transmitter somewhere
  1440         1         17.0     17.0      0.0          print('true transmitter', true_transmitter)
  1441         1          1.0      1.0      0.0          subset_index = []
  1442         1          8.0      8.0      0.0          complement_index = [i for i in range(self.sen_num)]
  1443         1        606.0    606.0      0.0          self.print_grid(self.grid_priori)
  1444         1          4.0      4.0      0.0          init_priori = [self.grid_priori[0][0]] * (self.grid_len*self.grid_len)
  1445         1         94.0     94.0      0.0          h_h = entropy(init_priori, base=2)
  1446         1          0.0      0.0      0.0          cost = 0
  1447                                           
  1448         4          4.0      1.0      0.0          while cost < budget and complement_index:
  1449         3     193984.0  64661.3      3.6              maximum = self.mutual_information_2(subset_index, true_transmitter, h_h)
  1450         3          3.0      1.0      0.0              best_candidate = complement_index[0]
  1451        72         48.0      0.7      0.0              for candidate in complement_index:
  1452        69        335.0      4.9      0.0                  ordered_insert(subset_index, candidate)
  1453        69    4901120.0  71030.7     91.5                  mi = self.mutual_information_2(subset_index, true_transmitter, h_h)
  1454        69        871.0     12.6      0.0                  print(subset_index, 'MI =', mi)
  1455        69         62.0      0.9      0.0                  if mi > maximum:
  1456        12          6.0      0.5      0.0                      maximum = mi
  1457        12          4.0      0.3      0.0                      best_candidate = candidate
  1458        69         72.0      1.0      0.0                  subset_index.remove(candidate)
  1459         3         16.0      5.3      0.0              ordered_insert(subset_index, best_candidate)
  1460         3          3.0      1.0      0.0              complement_index.remove(best_candidate)
  1461         3          8.0      2.7      0.0              plot_data.append([str(subset_index), len(subset_index), maximum])
  1462         3         10.0      3.3      0.0              print('MI = ', maximum)
  1463         3          4.0      1.3      0.0              h_h -= maximum
  1464         3         37.0     12.3      0.0              self.print_subset(subset_index)
  1465         3     257046.0  85682.0      4.8              self.update_hypothesis_2(true_transmitter, subset_index)
  1466         3       1854.0    618.0      0.0              self.print_grid(self.grid_priori)
  1467         3          4.0      1.3      0.0              cost += 1
  1468         1          1.0      1.0      0.0          return plot_data

Total time: 5.05772 s
File: select_sensor.py
Function: mutual_information_2 at line 1619

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1619                                               @profile
  1620                                               def mutual_information_2(self, subset_index, true_transmitter, h_h):
  1621                                                   '''the 2nd version of mutual information without generating data, should be faster
  1622                                                   Attributes:
  1623                                                       subset_index (list): the X_{T}
  1624                                                       true_transmitter (int): the true transmitter
  1625                                                       h_h (float): H(h), see equation #10 in the paper
  1626                                                   Return:
  1627                                                       (float) mutual information
  1628                                                   '''
  1629        72         48.0      0.7      0.0          if not subset_index:
  1630         1          1.0      1.0      0.0              return 0
  1631        71      36765.0    517.8      0.7          self.update_mean_vec_sub(subset_index)
  1632        71       2446.0     34.5      0.0          cov_sub = self.covariance[np.ix_(subset_index, subset_index)]
  1633        71        282.0      4.0      0.0          posterior = np.zeros(self.grid_len*self.grid_len)  # compute the entropy from the "temporary posterior grid"
  1634        71        651.0      9.2      0.0          np.random.seed(true_transmitter.x*self.grid_len + true_transmitter.y)
  1635        71         45.0      0.6      0.0          data = []   # the true transmitter generate some data
  1636       210        133.0      0.6      0.0          for index in subset_index:
  1637       139        102.0      0.7      0.0              sensor = self.sensors[index]
  1638       139        239.0      1.7      0.0              mean, std = self.means_stds.get((true_transmitter.x, true_transmitter.y, sensor.x, sensor.y))
  1639       139        803.0      5.8      0.0              data.append(np.random.normal(mean, std))
  1640     18247      11706.0      0.6      0.2          for trans in self.transmitters:
  1641                                                       #trans.set_mean_vec_sub(subset_index)
  1642                                                       #cov_sub = self.covariance[np.ix_(subset_index, subset_index)]
  1643     18176    4948322.0    272.2     97.8              likelihood = multivariate_normal(mean=trans.mean_vec_sub, cov=cov_sub).pdf(data)
  1644     18176      53309.0      2.9      1.1              posterior[trans.x * self.grid_len + trans.y] = likelihood * self.grid_priori[trans.x][trans.y]
  1645        71        702.0      9.9      0.0          posterior = posterior/posterior.sum()
  1646        71       2167.0     30.5      0.0          return h_h - entropy(posterior, base=2)

